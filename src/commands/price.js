import exchange from "../exchange/spot.js";
import coins from "../constants/curensies.js";
import checkAccess from "../utils/checkAccess.js";

export default function priceCommand(bot) {
  // /price –±–µ–∑ –∞—Ä–≥—É–º–µ–Ω—Ç—ñ–≤ ‚Äî –ø–æ–∫–∞–∑—É—î –∫–Ω–æ–ø–∫–∏
  bot.onText(/\Price$/, (msg) => {
    const chatId = msg.chat.id;
    if (!checkAccess(msg.from.id)) {
      return bot.sendMessage(
        msg.chat.id,
        "üö´ –¶–µ–π –±–æ—Ç —Ç—ñ–ª—å–∫–∏ –¥–ª—è –æ—Å–æ–±–∏—Å—Ç–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è ."
      );
    }

    const options = {
      reply_markup: {
        inline_keyboard: [
          coins.map((coin) => ({
            text: coin,
            callback_data: `price_${coin}/USDT`,
          })),
        ],
      },
    };

    bot.sendMessage(chatId, "üî∏ –û–±–µ—Ä–∏ –º–æ–Ω–µ—Ç—É:", options);
  });

  // –û–±—Ä–æ–±–∫–∞ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –Ω–∞ –∫–Ω–æ–ø–∫—É
  bot.on("callback_query", async (callbackQuery) => {
    if (!checkAccess(callbackQuery.from.id)) {
      return bot.answerCallbackQuery(callbackQuery.id, {
        text: 'üö´ –¶–µ–π –±–æ—Ç –ø—Ä–∏–≤–∞—Ç–Ω–∏–π.',
        show_alert: true,
      });
    }
  
    const msg = callbackQuery.message;
    const data = callbackQuery.data;

    if (data.startsWith("price_")) {
      const symbol = data.replace("price_", "");
      try {
        const ticker = await exchange.fetchTicker(symbol);
        const price = ticker.last;

        bot.sendMessage(
          msg.chat.id,
          `üí∞ –ü–æ—Ç–æ—á–Ω–∞ —Ü—ñ–Ω–∞ ${symbol}: ${price} USDT`
        );
      } catch (err) {
        console.error(err);
        bot.sendMessage(
          msg.chat.id,
          `‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ —Ü—ñ–Ω—É –¥–ª—è ${symbol}.`
        );
      }
    }

    // –û–±–æ–≤'—è–∑–∫–æ–≤–æ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î–º–æ –Ω–∞ callback, —â–æ–± –∫–Ω–æ–ø–∫–∞ –Ω–µ "–∑–∞–≤–∏—Å–∞–ª–∞"
    bot.answerCallbackQuery(callbackQuery.id);
  });

  // –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–∞–ø–∏—à–µ /price BTC/USDT –≤—Ä—É—á–Ω—É
  bot.onText(/üí∞ –¶—ñ–Ω–∞/, (msg) => {
    const chatId = msg.chat.id;
    if (!checkAccess(msg.from.id)) {
      return bot.sendMessage(msg.chat.id, 'üö´ –¶–µ–π –±–æ—Ç —Ç—ñ–ª—å–∫–∏ –¥–ª—è –æ—Å–æ–±–∏—Å—Ç–æ–≥–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞–Ω–Ω—è.');
    }
    const options = {
      reply_markup: {
        inline_keyboard: [
          [
            { text: "BTC/USDT", callback_data: "price_BTC/USDT" },
            { text: "ETH/USDT", callback_data: "price_ETH/USDT" },
          ],
        ],
      },
    };

    bot.sendMessage(chatId, "üî∏ –û–±–µ—Ä–∏ –º–æ–Ω–µ—Ç—É:", options);
  });
}
