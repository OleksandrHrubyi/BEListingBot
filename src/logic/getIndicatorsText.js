import ccxt from "ccxt";
import {
  EMA,
  SMA,
  RSI,
  MACD,
  OBV,
} from "technicalindicators";

// –û—Ç—Ä–∏–º—É—î–º–æ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É
export async function getIndicatorsText(symbol, exchangeName = "binance") {
  try {
    const exchangeClass = ccxt[exchangeName];
    if (!exchangeClass) throw new Error(`–ù–µ–≤—ñ–¥–æ–º–∞ –±—ñ—Ä–∂–∞: ${exchangeName}`);

    const exchange = new exchangeClass();
    await exchange.loadMarkets();

    const marketSymbol = `${symbol}/USDT`;
    if (!exchange.markets[marketSymbol]) {
      throw new Error(`–ü–∞—Ä–∞ ${marketSymbol} –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞`);
    }

    const candles = await exchange.fetchOHLCV(marketSymbol, "1h", undefined, 100);
    const closes = candles.map(c => c[4]);
    const volumes = candles.map(c => c[5]);

    // –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏
    const ema = EMA.calculate({ period: 20, values: closes });
    const sma = SMA.calculate({ period: 50, values: closes });
    const rsi = RSI.calculate({ period: 14, values: closes });

    const macdInput = {
      values: closes,
      fastPeriod: 12,
      slowPeriod: 26,
      signalPeriod: 9,
      SimpleMAOscillator: false,
      SimpleMASignal: false,
    };
    const macd = MACD.calculate(macdInput);

    const obv = OBV.calculate({ close: closes, volume: volumes });

    // –û—Å—Ç–∞–Ω–Ω—ñ –∑–Ω–∞—á–µ–Ω–Ω—è
    const latestPrice = closes[closes.length - 1];
    const latestEMA = ema[ema.length - 1];
    const latestSMA = sma[sma.length - 1];
    const latestRSI = rsi[rsi.length - 1];
    const latestMACD = macd[macd.length - 1];
    const latestOBV = obv[obv.length - 1];

    // –û—Ü—ñ–Ω–∫–∞ —Ç—Ä–µ–Ω–¥—É
    const trend =
      latestPrice > latestEMA && latestPrice > latestSMA
        ? "üü¢ –ó–∞–≥–∞–ª—å–Ω–∏–π —Ç—Ä–µ–Ω–¥: –≤–∏—Å—Ö—ñ–¥–Ω–∏–π"
        : latestPrice < latestEMA && latestPrice < latestSMA
        ? "üîª –ó–∞–≥–∞–ª—å–Ω–∏–π —Ç—Ä–µ–Ω–¥: –Ω–∏–∑—Ö—ñ–¥–Ω–∏–π"
        : "üîÑ –ó–∞–≥–∞–ª—å–Ω–∏–π —Ç—Ä–µ–Ω–¥: –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π";

    return {
      text: `
üìä <b>–¢–µ—Ö–Ω—ñ—á–Ω—ñ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏:</b>

- –ü–æ—Ç–æ—á–Ω–∞ —Ü—ñ–Ω–∞: <b>${latestPrice.toFixed(6)}</b>
- EMA(20): <b>${latestEMA?.toFixed(6)}</b>
- SMA(50): <b>${latestSMA?.toFixed(6)}</b>
- RSI(14): <b>${latestRSI?.toFixed(2)}</b>
${latestRSI < 30 ? "üîª –ü–µ—Ä–µ–ø—Ä–æ–¥–∞–Ω—ñ—Å—Ç—å" : latestRSI > 70 ? "üî∫ –ü–µ—Ä–µ–∫—É–ø–ª–µ–Ω—ñ—Å—Ç—å" : "‚ÑπÔ∏è RSI –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–∏–π"}

- MACD: <b>${latestMACD.MACD?.toFixed(6)}</b>
- Signal: <b>${latestMACD.signal?.toFixed(6)}</b>
${latestMACD.MACD > latestMACD.signal ? "üü¢ MACD –≤–∏—â–µ —Å–∏–≥–Ω–∞–ª—É ‚Äì –±–∏—á–∞—á–∏–π —ñ–º–ø—É–ª—å—Å" : "üîª MACD –Ω–∏–∂—á–µ —Å–∏–≥–Ω–∞–ª—É ‚Äì –≤–µ–¥–º–µ–∂–∏–π —ñ–º–ø—É–ª—å—Å"}

- OBV: <b>${latestOBV}</b>

${trend}
      `,
      indicators: {
        ema: latestEMA,
        sma: latestSMA,
        rsi: latestRSI,
        macd: latestMACD.MACD,
        obv: latestOBV,
      }
    };
  } catch (err) {
    console.error("–ü–æ–º–∏–ª–∫–∞ —ñ–Ω–¥–∏–∫–∞—Ç–æ—Ä—ñ–≤:", err.message);
    return { text: "‚ö†Ô∏è –Ü–Ω–¥–∏–∫–∞—Ç–æ—Ä–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ", indicators: {} };
  }
}
